{"remainingRequest":"/Users/samaponte/Documents/afloraVue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/samaponte/Documents/afloraVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/samaponte/Documents/afloraVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/samaponte/Documents/afloraVue/src/views/commons/sections/WorkProcess.vue?vue&type=template&id=2f4ca304&","dependencies":[{"path":"/Users/samaponte/Documents/afloraVue/src/views/commons/sections/WorkProcess.vue","mtime":1618339833491},{"path":"/Users/samaponte/Documents/afloraVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/samaponte/Documents/afloraVue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/samaponte/Documents/afloraVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/samaponte/Documents/afloraVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}