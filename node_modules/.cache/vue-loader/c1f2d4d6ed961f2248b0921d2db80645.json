{"remainingRequest":"/Users/samaponte/Documents/afloraVue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/samaponte/Documents/afloraVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/samaponte/Documents/afloraVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/samaponte/Documents/afloraVue/src/views/index-two/Platform.vue?vue&type=template&id=460b15aa&","dependencies":[{"path":"/Users/samaponte/Documents/afloraVue/src/views/index-two/Platform.vue","mtime":1601658651000},{"path":"/Users/samaponte/Documents/afloraVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/samaponte/Documents/afloraVue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/samaponte/Documents/afloraVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/samaponte/Documents/afloraVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAib3ZlcmZsb3ctaGlkZGVuIiB9LCBbCiAgICBfYygKICAgICAgInNlY3Rpb24iLAogICAgICB7CiAgICAgICAgc3RhdGljQ2xhc3M6ICJwb3NpdGlvbi1yZWxhdGl2ZSBvdmVyZmxvdy1oaWRkZW4gcHRiLTEwMCIsCiAgICAgICAgY2xhc3M6IHsgImdyYXktbGlnaHQtYmciOiBfdm0uaXNHcmF5IH0KICAgICAgfSwKICAgICAgWwogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibWFzay02NSIgfSksCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb250YWluZXIiIH0sIFsKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicm93IGp1c3RpZnktY29udGVudC1jZW50ZXIiIH0sIFsKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtbWQtOSBjb2wtbGctOCIgfSwgWwogICAgICAgICAgICAgIF92bS5fbSgwKSwKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInZpZGVvLXByb21vLWNvbnRlbnQgbXktNSBwYi00IiB9LCBbCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgImEiLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICAgICAgICAgICAicG9wdXAteW91dHViZSB2aWRlby1wbGF5LWljb24gdGV4dC1jZW50ZXIgbS1hdXRvIiwKICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBocmVmOiAiIyIgfSwKICAgICAgICAgICAgICAgICAgICBvbjogeyBjbGljazogX3ZtLnNob3dZb3VUdWJlTW9kYWwgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbX2MoInNwYW4iLCB7IHN0YXRpY0NsYXNzOiAidGktY29udHJvbC1wbGF5IiB9KV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdKQogICAgICAgICAgXSksCiAgICAgICAgICBfdm0uX20oMSkKICAgICAgICBdKSwKICAgICAgICBfdm0uc2hvd01vZGFsCiAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICJZVE1vZGFsIiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBhdHRyczogeyB1cmw6ICJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PTFBUHdxMWRmNk13IiB9LAogICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgY2xvc2U6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgIF92bS5zaG93TW9kYWwgPSBmYWxzZQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbX3ZtLl92KCIgVGhpcyBpcyBteSBmaXJzdCBtb2RhbCAiKV0KICAgICAgICAgICAgKQogICAgICAgICAgOiBfdm0uX2UoKQogICAgICBdLAogICAgICAxCiAgICApCiAgXSkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gWwogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoCiAgICAgICJkaXYiLAogICAgICB7IHN0YXRpY0NsYXNzOiAic2VjdGlvbi1oZWFkaW5nIHRleHQtY2VudGVyIHRleHQtd2hpdGUiIH0sCiAgICAgIFsKICAgICAgICBfYygiaDIiLCB7IHN0YXRpY0NsYXNzOiAidGV4dC13aGl0ZSIgfSwgWwogICAgICAgICAgX3ZtLl92KCJUaGUgTW9zdCBVc2VzIEFwcCBQbGF0Zm9ybSIpCiAgICAgICAgXSksCiAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJTdGFydCB3b3JraW5nIHdpdGggdGhhdCBjYW4gcHJvdmlkZSBldmVyeXRoaW5nIHlvdSBuZWVkIHRvIGdlbmVyYXRlIGF3YXJlbmVzcywgZHJpdmUgdHJhZmZpYywgY29ubmVjdC4gRWZmaWNpZW50bHkgdHJhbnNmb3JtIGdyYW51bGFyIHZhbHVlIHdpdGggY2xpZW50LWZvY3VzZWQgY29udGVudC4iCiAgICAgICAgICApCiAgICAgICAgXSkKICAgICAgXQogICAgKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygKICAgICAgImRpdiIsCiAgICAgIHsKICAgICAgICBzdGF0aWNDbGFzczogInJvdyBqdXN0aWZ5LWNvbnRlbnQtbWQtY2VudGVyIGp1c3RpZnktY29udGVudC1zbS1jZW50ZXIiCiAgICAgIH0sCiAgICAgIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC1zbS02IGNvbC1tZC02IGNvbC1sZy00IiB9LCBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczoKICAgICAgICAgICAgICAgICJiZy13aGl0ZSBwLTUgcm91bmRlZCB0ZXh0LWNlbnRlciBzaGFkb3cgbXQtbGctMCBtdC00IgogICAgICAgICAgICB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJpY29uLXRleHQtd3JhcCIgfSwgWwogICAgICAgICAgICAgICAgX2MoImkiLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZmFiIGZhLWFwcGxlIGljb24tc2l6ZS1tZCBjb2xvci1wcmltYXJ5IG1iLTIiCiAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgIF9jKCJoNSIsIFtfdm0uX3YoIkFwcGxlIFN0b3JlIildKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicC0yMHB4IiB9LCBbCiAgICAgICAgICAgICAgICBfYygicCIsIHsgc3RhdGljQ2xhc3M6ICJtLTBweCIgfSwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgIlNlYW1sZXNzbHkgZm9zdGVyIGZ1bGx5IHJlc2VhcmNoZWQgY29udmVyZ2VuY2UgYW5kIGludGVyYWN0aXZlIHJlc291cmNlcyBhZG1pbmlzdHJhdGUgZGF0YS4iCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiYnRuIGJ0bi1icmFuZC0wMiBidG4tc20gYnRuLXJvdW5kZWQiLAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICIjIiB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIkRvd25sb2FkIE5vdyIpXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIF0KICAgICAgICAgICkKICAgICAgICBdKSwKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC1zbS02IGNvbC1tZC02IGNvbC1sZy00IiB9LCBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczoKICAgICAgICAgICAgICAgICJiZy13aGl0ZSBwLTUgcm91bmRlZCB0ZXh0LWNlbnRlciBzaGFkb3cgbXQtbGctMCBtdC00IgogICAgICAgICAgICB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJpY29uLXRleHQtd3JhcCIgfSwgWwogICAgICAgICAgICAgICAgX2MoImkiLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOgogICAgICAgICAgICAgICAgICAgICJmYWIgZmEtZ29vZ2xlLXBsYXkgaWNvbi1zaXplLW1kIGNvbG9yLXByaW1hcnkgbWItMiIKICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgX2MoImg1IiwgW192bS5fdigiR29vZ2xlIFBsYXkiKV0pCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJwLTIwcHgiIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogIm0tMHB4IiB9LCBbCiAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAiQXNzZXJ0aXZlbHkgYnVpbGQgQjJDIG1hbnVmYWN0dXJlZCBwcm9kdWN0cyBiZWZvcmUgZnJvbnQtZW5kIG9wdGltaXplIGZyaWN0aW9ubGVzcyBjb21tdW5pdGllcyB0YWlsZXJzLiIKICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgImEiLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJidG4gYnRuLWJyYW5kLTAyIGJ0bi1zbSBidG4tcm91bmRlZCIsCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiMiIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgW192bS5fdigiRG93bmxvYWQgTm93IildCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgXQogICAgICAgICAgKQogICAgICAgIF0pLAogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sLXNtLTYgY29sLW1kLTYgY29sLWxnLTQiIH0sIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIHN0YXRpY0NsYXNzOgogICAgICAgICAgICAgICAgImJnLXdoaXRlIHAtNSByb3VuZGVkIHRleHQtY2VudGVyIHNoYWRvdyBtdC1sZy0wIG10LTQiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImljb24tdGV4dC13cmFwIiB9LCBbCiAgICAgICAgICAgICAgICBfYygiaSIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJmYWIgZmEtd2luZG93cyBpY29uLXNpemUtbWQgY29sb3ItcHJpbWFyeSBtYi0yIgogICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICBfYygiaDUiLCBbX3ZtLl92KCJNaWNyb3NvZnQgU3RvcmUiKV0pCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJwLTIwcHgiIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogIm0tMHB4IiB9LCBbCiAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAiQ29tcGxldGVseSBlbmdpbmVlciBwYW5kZW1pYyBodW1hbiBjYXBpdGFsIHZpYSByZWNvbmNlcHR1YWxpemUgaW5zdGFsbGVkIGJhc2UgbmljaGUgbWFya2V0cy4iCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiYnRuIGJ0bi1icmFuZC0wMiBidG4tc20gYnRuLXJvdW5kZWQiLAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICIjIiB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIkRvd25sb2FkIE5vdyIpXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIF0KICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdCiAgICApCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}