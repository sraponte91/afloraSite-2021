{"remainingRequest":"/Users/samaponte/Documents/afloraVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/samaponte/Documents/afloraVue/src/views/index-one/Testimonial.vue?vue&type=template&id=11500f9e&","dependencies":[{"path":"/Users/samaponte/Documents/afloraVue/src/views/index-one/Testimonial.vue","mtime":1601456031000},{"path":"/Users/samaponte/Documents/afloraVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/samaponte/Documents/afloraVue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/samaponte/Documents/afloraVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/samaponte/Documents/afloraVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxzZWN0aW9uIGNsYXNzPSJwb3NpdGlvbi1yZWxhdGl2ZSBncmFkaWVudC1iZyBwdGItMTAwIj4KICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgPGRpdiBjbGFzcz0icm93IGFsaWduLWl0ZW1zLWNlbnRlciI+CiAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC02IGNvbC1sZy01IG1iLTQgbWItc20tNCBtYi1tZC0wIG1iLWxnLTAiPgogICAgICAgIDxkaXYgY2xhc3M9InRlc3RpbW9uaWFsLWhlYWRpbmcgdGV4dC13aGl0ZSI+CiAgICAgICAgICA8aDIgY2xhc3M9InRleHQtd2hpdGUiPldoYXQgT3VyIENsaWVudCBTYXkgQWJvdXQgQXBkYXNoPC9oMj4KICAgICAgICAgIDxwPgogICAgICAgICAgICBDb2xsYWJvcmF0aXZlbHkgYWN0dWFsaXplIGV4Y2VsbGVudCBzY2hlbWFzIHdpdGhvdXQgZWZmZWN0aXZlCiAgICAgICAgICAgIG1vZGVscy4gU3luZXJnaXN0aWNhbGx5IGVuZ2luZWVyIGZ1bmN0aW9uYWxpemVkIGFwcGxpY2F0aW9ucwogICAgICAgICAgICByYXRoZXIgdGhhbiBiYWNrZW5kIGUtY29tbWVyY2UuCiAgICAgICAgICA8L3A+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNiBjb2wtbGctNiI+CiAgICAgICAgPGRpdiBjbGFzcz0idGVzdGltb25pYWwtY29udGVudC13cmFwIj4KICAgICAgICAgIDwhLS0gPGRpdgogICAgICAgICAgICBjbGFzcz0ib3dsLWNhcm91c2VsIG93bC10aGVtZSBjbGllbnQtdGVzdGltb25pYWwtMSBkb3QtaW5kaWNhdG9yIHRlc3RpbW9uaWFsLXNoYXBlIgogICAgICAgICAgPiAtLT4KICAgICAgICAgIDxjYXJvdXNlbAogICAgICAgICAgICA6YXV0b3BsYXk9InRydWUiCiAgICAgICAgICAgIDpkb3RzPSJ0cnVlIgogICAgICAgICAgICBjbGFzcz0ib3dsLXRoZW1lIGNsaWVudC10ZXN0aW1vbmlhbC0xIGRvdC1pbmRpY2F0b3IgdGVzdGltb25pYWwtc2hhcGUgb3dsLWxvYWRlZCBvd2wtZHJhZyIKICAgICAgICAgICAgOmxvb3A9InRydWUiCiAgICAgICAgICAgIDptYXJnaW49IjMwIgogICAgICAgICAgICA6bmF2PSJmYWxzZSIKICAgICAgICAgICAgOnJlc3BvbnNpdmVDbGFzcz0idHJ1ZSIKICAgICAgICAgICAgOmF1dG9wbGF5SG92ZXJQYXVzZT0idHJ1ZSIKICAgICAgICAgICAgOmxhenlMb2FkPSJ0cnVlIgogICAgICAgICAgICA6aXRlbXM9IjEiCiAgICAgICAgICA+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0iPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRlc3RpbW9uaWFsLXF1b3RlLXdyYXAiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVkaWEgYXV0aG9yLWluZm8gbWItMyI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImF1dGhvci1pbWcgbXItMyI+CiAgICAgICAgICAgICAgICAgICAgPGltZwogICAgICAgICAgICAgICAgICAgICAgc3JjPSIuLi8uLi9hc3NldHMvaW1nL2NsaWVudC8xLmpwZyIKICAgICAgICAgICAgICAgICAgICAgIGFsdD0iY2xpZW50IgogICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImltZy1mbHVpZCIKICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVkaWEtYm9keSB0ZXh0LXdoaXRlIj4KICAgICAgICAgICAgICAgICAgICA8aDUgY2xhc3M9Im1iLTAgdGV4dC13aGl0ZSI+Sm9obiBDaGFybGVzPC9oNT4KICAgICAgICAgICAgICAgICAgICA8c3Bhbj5IZWFkIE9mIEFkbWluPC9zcGFuPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1xdW90ZS1yaWdodCB0ZXh0LXdoaXRlIj48L2k+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNsaWVudC1zYXkgdGV4dC13aGl0ZSI+CiAgICAgICAgICAgICAgICAgIDxwPgogICAgICAgICAgICAgICAgICAgIEludGVyYWN0aXZlbHkgb3B0aW1pemUgZnVsbHkgcmVzZWFyY2hlZCBleHBlcnRpc2UKICAgICAgICAgICAgICAgICAgICB2aXMtYS12aXMgcGx1Zy1hbmQtcGxheSByZWxhdGlvbnNoaXBzLiBJbnRyaW5zaWNseSBkZXZlbG9wCiAgICAgICAgICAgICAgICAgICAgdmlyYWwgY29yZSBjb21wZXRlbmNpZXMgZm9yIGZ1bGx5IHRlc3RlZCBjdXN0b21lciBzZXJ2aWNlLgogICAgICAgICAgICAgICAgICAgIEVudGh1c2lhc3RpY2FsbHkgY3JlYXRlIG5leHQtZ2VuZXJhdGlvbiBncm93dGggc3RyYXRlZ2llcwogICAgICAgICAgICAgICAgICAgIGFuZC4KICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXN0aW1vbmlhbC1xdW90ZS13cmFwIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lZGlhIGF1dGhvci1pbmZvIG1iLTMiPgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhdXRob3ItaW1nIG1yLTMiPgogICAgICAgICAgICAgICAgICAgIDxpbWcKICAgICAgICAgICAgICAgICAgICAgIHNyYz0iLi4vLi4vYXNzZXRzL2ltZy9jbGllbnQvMi5qcGciCiAgICAgICAgICAgICAgICAgICAgICBhbHQ9ImNsaWVudCIKICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJpbWctZmx1aWQiCiAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lZGlhLWJvZHkgdGV4dC13aGl0ZSI+CiAgICAgICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJtYi0wIHRleHQtd2hpdGUiPkFyYWJlbGxhIE9yYTwvaDU+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4+SFIgTWFuYWdlcjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtcXVvdGUtcmlnaHQgdGV4dC13aGl0ZSI+PC9pPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjbGllbnQtc2F5IHRleHQtd2hpdGUiPgogICAgICAgICAgICAgICAgICA8cD4KICAgICAgICAgICAgICAgICAgICBSYXBpZGlvdXNseSBkZXZlbG9wIHVzZXIgZnJpZW5kbHkgZ3Jvd3RoIHN0cmF0ZWdpZXMgYWZ0ZXIKICAgICAgICAgICAgICAgICAgICBleHRlbnNpdmUgaW5pdGlhdGl2ZXMuIENvbnZlbmllbnRseSBncm93IGlubm92YXRpdmUKICAgICAgICAgICAgICAgICAgICBiZW5lZml0cyB0aHJvdWdoIGZ1bGx5IHRlc3RlZCBkZWxpdmVyYWJsZXMuIFJhcGlkaW91c2x5CiAgICAgICAgICAgICAgICAgICAgdXRpbGl6ZSBmb2N1c2VkIHBsYXRmb3JtcyB0aHJvdWdoIGVuZC10by1lbmQgc2NoZW1hcy4KICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXN0aW1vbmlhbC1xdW90ZS13cmFwIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lZGlhIGF1dGhvci1pbmZvIG1iLTMiPgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhdXRob3ItaW1nIG1yLTMiPgogICAgICAgICAgICAgICAgICAgIDxpbWcKICAgICAgICAgICAgICAgICAgICAgIHNyYz0iLi4vLi4vYXNzZXRzL2ltZy9jbGllbnQvMy5qcGciCiAgICAgICAgICAgICAgICAgICAgICBhbHQ9ImNsaWVudCIKICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJpbWctZmx1aWQiCiAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lZGlhLWJvZHkgdGV4dC13aGl0ZSI+CiAgICAgICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJtYi0wIHRleHQtd2hpdGUiPkplcmVteSBKZXJlPC9oNT4KICAgICAgICAgICAgICAgICAgICA8c3Bhbj5UZWFtIExlYWRlcjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtcXVvdGUtcmlnaHQgdGV4dC13aGl0ZSI+PC9pPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjbGllbnQtc2F5IHRleHQtd2hpdGUiPgogICAgICAgICAgICAgICAgICA8cD4KICAgICAgICAgICAgICAgICAgICBPYmplY3RpdmVseSBzeW50aGVzaXplIGNsaWVudC1jZW50ZXJlZCBlLXRhaWxlcnMgZm9yCiAgICAgICAgICAgICAgICAgICAgbWFpbnRhaW5hYmxlIGNoYW5uZWxzLiBIb2xpc3RpY2x5IGFkbWluaXN0cmF0ZSBjdXN0b21lcgogICAgICAgICAgICAgICAgICAgIGRpcmVjdGVkIHZvcnRhbHMgd2hlcmVhcyB0YWN0aWNhbCBmdW5jdGlvbmFsaXRpZXMuCiAgICAgICAgICAgICAgICAgICAgRW5lcmdpc3RpY2FsbHkgbW9uZXRpemUgcmVsaWFibGUgaW1wZXJhdGl2ZXMgdGhyb3VnaAogICAgICAgICAgICAgICAgICAgIGNsaWVudC1jZW50cmljLgogICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0iPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRlc3RpbW9uaWFsLXF1b3RlLXdyYXAiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVkaWEgYXV0aG9yLWluZm8gbWItMyI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImF1dGhvci1pbWcgbXItMyI+CiAgICAgICAgICAgICAgICAgICAgPGltZwogICAgICAgICAgICAgICAgICAgICAgc3JjPSIuLi8uLi9hc3NldHMvaW1nL2NsaWVudC80LmpwZyIKICAgICAgICAgICAgICAgICAgICAgIGFsdD0iY2xpZW50IgogICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImltZy1mbHVpZCIKICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVkaWEtYm9keSB0ZXh0LXdoaXRlIj4KICAgICAgICAgICAgICAgICAgICA8aDUgY2xhc3M9Im1iLTAgdGV4dC13aGl0ZSI+Sm9obiBDaGFybGVzPC9oNT4KICAgICAgICAgICAgICAgICAgICA8c3Bhbj5NYXJrZXRpbmcgSGVhZDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtcXVvdGUtcmlnaHQgdGV4dC13aGl0ZSI+PC9pPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjbGllbnQtc2F5IHRleHQtd2hpdGUiPgogICAgICAgICAgICAgICAgICA8cD4KICAgICAgICAgICAgICAgICAgICBFbnRodXNpYXN0aWNhbGx5IGlubm92YXRlIEIyQyBkYXRhIHdpdGhvdXQKICAgICAgICAgICAgICAgICAgICBjbGlja3MtYW5kLW1vcnRhciBjb252ZXJnZW5jZS4gTW9ub3RvbmVjdGFsbHkgZGVsaXZlcgogICAgICAgICAgICAgICAgICAgIGNvbXBlbGxpbmcgdGVzdGluZyBwcm9jZWR1cmVzIHZpcy1hLXZpcyBCMkIgdGVzdGluZwogICAgICAgICAgICAgICAgICAgIHByb2NlZHVyZXMuIENvbXBldGVudGx5IGV2aXNjdWxhdGUgaW50ZWdyYXRlZCByZXNvdXJjZXMKICAgICAgICAgICAgICAgICAgICB3aGVyZWFzIGdsb2JhbC4KICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9jYXJvdXNlbD4KICAgICAgICAgIDwhLS0gPC9kaXY+IC0tPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvZGl2Pgo8L3NlY3Rpb24+Cg=="},null]}