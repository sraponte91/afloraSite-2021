{"remainingRequest":"/Users/samaponte/Documents/afloraVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/samaponte/Documents/afloraVue/src/pages/utilities/DownloadPage.vue?vue&type=template&id=54df23c0&","dependencies":[{"path":"/Users/samaponte/Documents/afloraVue/src/pages/utilities/DownloadPage.vue","mtime":1601658651000},{"path":"/Users/samaponte/Documents/afloraVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/samaponte/Documents/afloraVue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/samaponte/Documents/afloraVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/samaponte/Documents/afloraVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXY+CiAgICA8bmF2LWJhciAvPgoKICAgIDxkaXYgY2xhc3M9Im1haW4iPgogICAgICAgIDxwYWdlLWhlYWRlcgogICAgICAgICAgICB0aXRsZT0iRG93bmxvYWQiCiAgICAgICAgICAgIHN1YnRpdGxlPSJSYXBpZGlvdXNseSBkZXBsb3kgd29ybGQtY2xhc3MgcGxhdGZvcm1zIHdoZXJlYXMgY29sbGFib3JhdGl2ZSBpbnRlcmZhY2VzLiBQaG9zZmx1b3Jlc2NlbnRseSBmYWNpbGl0YXRlIGNvcnBvcmF0ZS4iCiAgICAgICAgLz4KICAgICAgICA8YnJlYWRjcnVtYiA6Y3J1bWJzPSJjcnVtYnMiIC8+CgogICAgICAgIDxzZWN0aW9uIGlkPSJhYm91dCIgY2xhc3M9ImFib3V0LXNlY3Rpb24gZ3JheS1saWdodC1iZyBwb3NpdGlvbi1yZWxhdGl2ZSBvdmVyZmxvdy1oaWRkZW4gcHRiLTEwMCI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93IGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNiBjb2wtbGctNiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW1hZ2Utd3JhcCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImltZy1mbHVpZCIgc3JjPSIuLi8uLi9hc3NldHMvaW1nL21vYmlsZS1wYW5hLnN2ZyIgYWx0PSJhbmltYXRpb24gaW1hZ2UiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtMTIgY29sLWxnLTYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZlYXR1cmUtY29udGVudHMgc2VjdGlvbi1oZWFkaW5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgyPlRoZSBNb3N0IFVzZWZ1bCBSZXNvdXJjZSBDcmVhdGVkIEZvciBEZXNpZ25lcnM8L2gyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD5PYmplY3RpdmVseSBkZWxpdmVyIHByb2Zlc3Npb25hbCB2YWx1ZSB3aXRoIGRpdmVyc2Ugd2ViLXJlYWRpbmVzcy4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbGxhYm9yYXRpdmVseSB0cmFuc2l0aW9uIHdpcmVsZXNzIGN1c3RvbWVyIHNlcnZpY2Ugd2l0aG91dCBnb2FsLW9yaWVudGVkIGNhdGFseXN0cyBmb3IKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoYW5nZS4gQ29sbGFib3JhdGl2ZWx5LjwvcD4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iY2hlY2stbGlzdC13cmFwIGxpc3QtdHdvLWNvbCBweS0zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT5EYXRhIGRyaXZlbiBxdWFsaXR5IHJldmlldzwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+U2VjdXJlIHdvcmsgZW52aXJvbm1lbnQ8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjI0eDcgY292ZXJhZ2U8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPkxpZmV0aW1lIHVwZGF0ZXM8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPk1hbmFnZW1lbnQgdGVhbTwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+VGVjaCBzdXBwb3J0PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT5JbnRlZ3JhdGlvbiByZWFkeTwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+VG9ucyBvZiAuLi8uLi9hc3NldHM8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPkNvbXBsaWFuY2UgZHJpdmVuIHByb2Nlc3M8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPldvcmtmb3JjZSBtYW5hZ2VtZW50PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93IHB0LTQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTQgY29sLWxnLTMgYm9yZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb3VudC1kYXRhIHRleHQtY2VudGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0IGNsYXNzPSJjb3VudC1udW1iZXIgbWItMCBjb2xvci1wcmltYXJ5IGZvbnQtd2VpZ2h0LWJvbGQiPjEwMjM8L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5DdXN0b21lcnM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC00IGNvbC1sZy0zIGJvcmRlci1yaWdodCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY291bnQtZGF0YSB0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNCBjbGFzcz0iY291bnQtbnVtYmVyIG1iLTAgY29sb3ItcHJpbWFyeSBmb250LXdlaWdodC1ib2xkIj41NDcwPC9oND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+RG93bmxvYWRzPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtNCBjb2wtbGctMyBib3JkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvdW50LWRhdGEgdGV4dC1jZW50ZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQgY2xhc3M9ImNvdW50LW51bWJlciBtYi0wIGNvbG9yLXByaW1hcnkgZm9udC13ZWlnaHQtYm9sZCI+MzU2MDwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlNhdGlzZmllZDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvc2VjdGlvbj4KICAgICAgICAgICAgICAgIDwhLS1hYm91dCB1cyBzZWN0aW9uIGVuZC0tPgoKICAgICAgICAgICAgICAgIDwhLS12aWRlbyBzZWN0aW9uIHdpdGggY291bnRlciBzdGFydC0tPgogICAgICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3M9InBvc2l0aW9uLXJlbGF0aXZlIG92ZXJmbG93LWhpZGRlbiBwdGItMTAwIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYXNrLTY1Ij48L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cganVzdGlmeS1jb250ZW50LWNlbnRlciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtOSBjb2wtbGctOCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbi1oZWFkaW5nIHRleHQtY2VudGVyIHRleHQtd2hpdGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InRleHQtd2hpdGUiPlRoZSBNb3N0IFVzZXMgQXBwIFBsYXRmb3JtPC9oMj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+U3RhcnQgd29ya2luZyB3aXRoIHRoYXQgY2FuIHByb3ZpZGUgZXZlcnl0aGluZyB5b3UgbmVlZCB0byBnZW5lcmF0ZSBhd2FyZW5lc3MsIGRyaXZlIHRyYWZmaWMsIGNvbm5lY3QuIEVmZmljaWVudGx5IHRyYW5zZm9ybSBncmFudWxhciB2YWx1ZSB3aXRoIGNsaWVudC1mb2N1c2VkIGNvbnRlbnQuPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InZpZGVvLXByb21vLWNvbnRlbnQgbXktNSBwYi00Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyIgQGNsaWNrPSJzaG93WW91VHViZU1vZGFsIiBjbGFzcz0icG9wdXAteW91dHViZSB2aWRlby1wbGF5LWljb24gdGV4dC1jZW50ZXIgbS1hdXRvIj48c3BhbiBjbGFzcz0idGktY29udHJvbC1wbGF5Ij48L3NwYW4+IDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLWVuZCBjb2wtLT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1lbmQgcm93LS0+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyBqdXN0aWZ5LWNvbnRlbnQtbWQtY2VudGVyIGp1c3RpZnktY29udGVudC1zbS1jZW50ZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTYgY29sLW1kLTYgY29sLWxnLTQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJnLXdoaXRlIHAtNSByb3VuZGVkIHRleHQtY2VudGVyIHNoYWRvdyBtdC1sZy0wIG10LTQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpY29uLXRleHQtd3JhcCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWFwcGxlIGljb24tc2l6ZS1tZCBjb2xvci1wcmltYXJ5IG1iLTIiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNT5BcHBsZSBTdG9yZTwvaDU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwLTIwcHgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Im0tMHB4Ij5TZWFtbGVzc2x5IGZvc3RlciBmdWxseSByZXNlYXJjaGVkIGNvbnZlcmdlbmNlIGFuZCBpbnRlcmFjdGl2ZSByZXNvdXJjZXMgYWRtaW5pc3RyYXRlIGRhdGEuPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImJ0biBidG4tYnJhbmQtMDIgYnRuLXNtIGJ0bi1yb3VuZGVkIiBocmVmPSIjIj5Eb3dubG9hZCBOb3c8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tNiBjb2wtbWQtNiBjb2wtbGctNCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYmctd2hpdGUgcC01IHJvdW5kZWQgdGV4dC1jZW50ZXIgc2hhZG93IG10LWxnLTAgbXQtNCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imljb24tdGV4dC13cmFwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ29vZ2xlLXBsYXkgaWNvbi1zaXplLW1kIGNvbG9yLXByaW1hcnkgbWItMiI+PC9pPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg1Pkdvb2dsZSBQbGF5PC9oNT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InAtMjBweCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0ibS0wcHgiPkFzc2VydGl2ZWx5IGJ1aWxkIEIyQyBtYW51ZmFjdHVyZWQgcHJvZHVjdHMgYmVmb3JlIGZyb250LWVuZCBvcHRpbWl6ZSBmcmljdGlvbmxlc3MgY29tbXVuaXRpZXMgdGFpbGVycy48L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iYnRuIGJ0bi1icmFuZC0wMiBidG4tc20gYnRuLXJvdW5kZWQiIGhyZWY9IiMiPkRvd25sb2FkIE5vdzwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS02IGNvbC1tZC02IGNvbC1sZy00Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJiZy13aGl0ZSBwLTUgcm91bmRlZCB0ZXh0LWNlbnRlciBzaGFkb3cgbXQtbGctMCBtdC00Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaWNvbi10ZXh0LXdyYXAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS13aW5kb3dzIGljb24tc2l6ZS1tZCBjb2xvci1wcmltYXJ5IG1iLTIiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNT5NaWNyb3NvZnQgU3RvcmU8L2g1PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icC0yMHB4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJtLTBweCI+Q29tcGxldGVseSBlbmdpbmVlciBwYW5kZW1pYyBodW1hbiBjYXBpdGFsIHZpYSByZWNvbmNlcHR1YWxpemUgaW5zdGFsbGVkIGJhc2UgbmljaGUgbWFya2V0cy48L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iYnRuIGJ0bi1icmFuZC0wMiBidG4tc20gYnRuLXJvdW5kZWQiIGhyZWY9IiMiPkRvd25sb2FkIE5vdzwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L3NlY3Rpb24+CgogICAgICAgICAgICAgICAgPGN1c3RvbWVycyA6cGFkZGluZy10b3A9ImZhbHNlIiAvPgogICAgICAgIDxZVE1vZGFsIHVybD0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj0xQVB3cTFkZjZNdyIgdi1pZj0ic2hvd01vZGFsIiBAY2xvc2U9InNob3dNb2RhbCA9IGZhbHNlIj4KICAgICAgICAgICAgVGhpcyBpcyBteSBmaXJzdCBtb2RhbAogICAgICAgIDwvWVRNb2RhbD4KICAgIDwvZGl2PgogICAgPHNpdGUtZm9vdGVyIC8+CiAgICA8Y29weXJpZ2h0IC8+CjwvZGl2Pgo="},null]}