{"remainingRequest":"/Users/samaponte/Documents/afloraVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/samaponte/Documents/afloraVue/src/views/index-three/Features.vue?vue&type=template&id=3b3148b2&","dependencies":[{"path":"/Users/samaponte/Documents/afloraVue/src/views/index-three/Features.vue","mtime":1601456031000},{"path":"/Users/samaponte/Documents/afloraVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/samaponte/Documents/afloraVue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/samaponte/Documents/afloraVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/samaponte/Documents/afloraVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxzZWN0aW9uIGlkPSJmZWF0dXJlcyIgY2xhc3M9ImZlYXR1cmUtc2VjdGlvbiBwdGItMTAwIiB2LWJpbmQ6Y2xhc3M9InsgJ2dyYXktbGlnaHQtYmcnIDogaXNHcmF5IH0iPgogICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KICAgICAgICA8ZGl2IGNsYXNzPSJyb3cganVzdGlmeS1jb250ZW50LWNlbnRlciI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC05IGNvbC1sZy04Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24taGVhZGluZyB0ZXh0LWNlbnRlciBtYi01Ij4KICAgICAgICAgICAgICAgICAgICA8aDI+QXBwIEZlYXR1cmVzPC9oMj4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0idGV4dC1tdXRlZCBwYXJhLWRlc2MgbWItMCBteC1hdXRvIj5TdGFydCB3b3JraW5nIHdpdGggdGhhdCBjYW4gcHJvdmlkZSBldmVyeXRoaW5nIHlvdSBuZWVkIHRvIGdlbmVyYXRlIGF3YXJlbmVzcywgZHJpdmUgdHJhZmZpYywgY29ubmVjdC4gRWZmaWNpZW50bHkgdHJhbnNmb3JtIGdyYW51bGFyIHZhbHVlIHdpdGggY2xpZW50LWZvY3VzZWQgY29udGVudC4gRW5lcmdpc3RpY2FsbHkgcmVkZWZpbmUgbWFya2V0LjwvcD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0icm93IGFsaWduLWl0ZW1zLWNlbnRlciI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1sZy04IGNvbC1tZC0xMiI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgYWxpZ24taXRlbXMtY2VudGVyIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNiBjb2wtMTIiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmZWF0dXJlcy1zaW5nbGUtd3JhcCBtYi1zbS0wIG1iLW1kLTUgbWItbGctNSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGktbGF5b3V0IHAtMyBtci00IG10LTEgcm91bmRlZC1jaXJjbGUgZmxvYXQtbGVmdCI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmVhdHVyZXMtc2luZ2xlLWNvbnRlbnQgZC1ibG9jayBvdmVyZmxvdy1oaWRkZW4iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNSBjbGFzcz0ibWItMiI+VXNlIE9uIEFueSBEZXZpY2U8L2g1PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPmNvbXBvc2VkIGluIGEgcHNldWRvLUxhdGluIGxhbmd1YWdlIHdoaWNoIG1vcmUgb3IgbGVzcyBwc2V1ZG8tTGF0aW4gbGFuZ3VhZ2UgY29ycmVzcG9uZHMuPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNiBjb2wtMTIiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmZWF0dXJlcy1zaW5nbGUtd3JhcCBtYi1zbS0wIG1iLW1kLTUgbWItbGctNSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGktdGhlbWlmeS1mYXZpY29uLWFsdCBwLTMgbXItNCBtdC0xIHJvdW5kZWQtY2lyY2xlIGZsb2F0LWxlZnQiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZlYXR1cmVzLXNpbmdsZS1jb250ZW50IGQtYmxvY2sgb3ZlcmZsb3ctaGlkZGVuIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDUgY2xhc3M9Im1iLTIiPlRoZW1pZnkgSWNvbjwvaDU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+Y29tcG9zZWQgaW4gYSBwc2V1ZG8tTGF0aW4gbGFuZ3VhZ2Ugd2hpY2ggbW9yZSBvciBsZXNzIHBzZXVkby1MYXRpbiBsYW5ndWFnZSBjb3JyZXNwb25kcy48L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC02IGNvbC0xMiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZlYXR1cmVzLXNpbmdsZS13cmFwIG1iLXNtLTAgbWItbWQtNSBtYi1sZy01Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0aS1leWUgcC0zIG1yLTQgbXQtMSByb3VuZGVkLWNpcmNsZSBmbG9hdC1sZWZ0Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmZWF0dXJlcy1zaW5nbGUtY29udGVudCBkLWJsb2NrIG92ZXJmbG93LWhpZGRlbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJtYi0yIj5SZXRpbmEgUmVhZHk8L2g1PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPmNvbXBvc2VkIGluIGEgcHNldWRvLUxhdGluIGxhbmd1YWdlIHdoaWNoIG1vcmUgb3IgbGVzcyBwc2V1ZG8tTGF0aW4gbGFuZ3VhZ2UgY29ycmVzcG9uZHMuPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNiBjb2wtMTIiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmZWF0dXJlcy1zaW5nbGUtd3JhcCBtYi1zbS0wIG1iLW1kLTUgbWItbGctNSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGktdGh1bWItdXAgcC0zIG1yLTQgbXQtMSByb3VuZGVkLWNpcmNsZSBmbG9hdC1sZWZ0Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmZWF0dXJlcy1zaW5nbGUtY29udGVudCBkLWJsb2NrIG92ZXJmbG93LWhpZGRlbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJtYi0yIj5XM2MgVmFsaWQgQ29kZTwvaDU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+Y29tcG9zZWQgaW4gYSBwc2V1ZG8tTGF0aW4gbGFuZ3VhZ2Ugd2hpY2ggbW9yZSBvciBsZXNzIHBzZXVkby1MYXRpbiBsYW5ndWFnZSBjb3JyZXNwb25kcy48L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC02IGNvbC0xMiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZlYXR1cmVzLXNpbmdsZS13cmFwIG1iLXNtLTAgbWItbWQtNSBtYi1sZy01Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0aS1tb2JpbGUgcC0zIG1yLTQgbXQtMSByb3VuZGVkLWNpcmNsZSBmbG9hdC1sZWZ0Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmZWF0dXJlcy1zaW5nbGUtY29udGVudCBkLWJsb2NrIG92ZXJmbG93LWhpZGRlbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJtYi0yIj5GdWxseSBSZXNwb25zaXZlPC9oNT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD5jb21wb3NlZCBpbiBhIHBzZXVkby1MYXRpbiBsYW5ndWFnZSB3aGljaCBtb3JlIG9yIGxlc3MgcHNldWRvLUxhdGluIGxhbmd1YWdlIGNvcnJlc3BvbmRzLjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTYgY29sLTEyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmVhdHVyZXMtc2luZ2xlLXdyYXAgbWItc20tMCBtYi1tZC01IG1iLWxnLTUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRpLXdvcmxkIHAtMyBtci00IG10LTEgcm91bmRlZC1jaXJjbGUgZmxvYXQtbGVmdCI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmVhdHVyZXMtc2luZ2xlLWNvbnRlbnQgZC1ibG9jayBvdmVyZmxvdy1oaWRkZW4iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNSBjbGFzcz0ibWItMiI+QnJvd3NlciBDb21wYXRpYmlsaXR5PC9oNT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD5jb21wb3NlZCBpbiBhIHBzZXVkby1MYXRpbiBsYW5ndWFnZSB3aGljaCBtb3JlIG9yIGxlc3MgcHNldWRvLUxhdGluIGxhbmd1YWdlIGNvcnJlc3BvbmRzLjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1sZy00IGNvbC1tZC00IGNvbC0xMiI+CiAgICAgICAgICAgICAgICA8aW1nIHNyYz0iLi4vLi4vYXNzZXRzL2ltZy9hcHAtbW9iaWxlLWltYWdlLnBuZyIgY2xhc3M9ImltZy1mbHVpZCBteC1hdXRvIGQtbGctYmxvY2sgZC1ub25lIiBhbHQ9ImFwcCBzY3JlZW4iPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L3NlY3Rpb24+Cg=="},null]}